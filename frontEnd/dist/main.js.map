{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Components/leftnav/leftnav.component.css","webpack:///./src/app/Components/leftnav/leftnav.component.html","webpack:///./src/app/Components/leftnav/leftnav.component.ts","webpack:///./src/app/Components/login/login.component.css","webpack:///./src/app/Components/login/login.component.html","webpack:///./src/app/Components/login/login.component.ts","webpack:///./src/app/Components/topheader/topheader.component.css","webpack:///./src/app/Components/topheader/topheader.component.html","webpack:///./src/app/Components/topheader/topheader.component.ts","webpack:///./src/app/Components/usermanagement/usermanagement.component.css","webpack:///./src/app/Components/usermanagement/usermanagement.component.html","webpack:///./src/app/Components/usermanagement/usermanagement.component.ts","webpack:///./src/app/Services/dashservices.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/booksmanagement/booksmanagement.component.css","webpack:///./src/app/components/booksmanagement/booksmanagement.component.html","webpack:///./src/app/components/booksmanagement/booksmanagement.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".leftnav{ padding: 0px;}\\r\\n.realty_logo{ padding: 10px 0px;}\\r\\n.realtyNav{ list-style: none; border-top: 1px solid #ddd; padding: 0px; margin: 0px; }\\r\\n.realtyNav > li{ font-size: 14px; padding: 12px 20px; border-bottom: 1px solid #ddd; cursor: pointer;}\\r\\n.fxd_navwidth{ width: 100%;}\\r\\n.subNav{ padding: 0px; margin: 10px 0px 0px 0px;}\\r\\n.navActive{ background-color: #c98536; color: #fff;}\\r\\n.subNav > li{ padding: 5px 10px; margin: 0px; font-size: 13px;}\\r\\n.icndwn{ font-size: 1.2rem; position: relative; left: 15px; top: 3px;}\"","module.exports = \"<div class=\\\"leftnav\\\">\\r\\n  <nav class=\\\"navbar navbar-default nopad\\\">\\r\\n    <div class=\\\"container-fluid padzero\\\">\\r\\n      <div class=\\\"navbar-header realty_logo\\\">\\r\\n        <a class=\\\"navbar-brand\\\"><img src=\\\"assets/images/logo.png\\\" width=\\\"100%\\\" alt=\\\"1421 Realty\\\" title=\\\"1421 Realty\\\"></a>\\r\\n      </div>\\r\\n      <div class=\\\"fxd_navwidth\\\">\\r\\n        <ul class=\\\"nav navbar-nav realtyNav\\\">\\r\\n          <li [ngClass]=\\\"navPages=='usermanagement'? 'navActive' : '' \\\" (click)=\\\"um()\\\"><i class=\\\"fas fa-users\\\"></i> User Management</li>\\r\\n          <li [ngClass]=\\\"navPages=='booksmanagement'? 'navActive' : '' \\\" (click)=\\\"bm()\\\"><i class=\\\"fa fa-book\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            Books Management</li>\\r\\n          \\r\\n        </ul>\\r\\n        \\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'leftnav',\r\n  templateUrl: './leftnav.component.html',\r\n  styleUrls: ['./leftnav.component.css']\r\n})\r\nexport class LeftnavComponent implements OnInit {\r\n\r\n  public navPages = \"\";\r\n  sNav : boolean = false;\r\n  constructor(\r\n    private routeSvc: Router,\r\n  ) { }\r\n\r\n  dashboard(){\r\n    this.routeSvc.navigateByUrl('dashboard');\r\n  }\r\n  um(){\r\n    this.routeSvc.navigateByUrl('usermanagement');\r\n  }\r\n  bm(){\r\n    this.routeSvc.navigateByUrl('booksmanagement');\r\n    \r\n  }\r\n  \r\n\r\n  ngOnInit() {\r\n    let urlBreakup = this.routeSvc.url.split('/');\r\n    this.navPages = urlBreakup[1];\r\n  }\r\n\r\n  openSubNav(){\r\n    this.sNav = !this.sNav;\r\n  }\r\n\r\n}\r\n","module.exports = \".login_frm{ width: 70%; position: absolute; top: 50%; left: 50%;\\r\\n    -webkit-transform: translate(-50%, -50%); transform: translate(-50%, -50%);\\r\\n}\\r\\n.myinp{  box-shadow: none; -webkit-appearance: none; -moz-appearance: none; appearance: none;}\\r\\n.error_mes{ color: red; border-color:1px solid red; box-shadow: none;}\\r\\n.real_logo{ margin:0px 0px 25px 0px;}\\r\\n.realBtn{ outline: none; box-shadow: none; -webkit-appearance: none; -moz-appearance: none; appearance: none; color: #fff; border-radius: 2px;\\r\\n    background-color: #c98536; border: none; text-align: center;\\r\\n    margin-bottom: 0px;\\r\\n}\\r\\n.realBtn:hover{ background-color: #333;}\\r\\n.sgn_btn{ margin-left: 20px; font-size: 13px;}\\r\\n.sgup{ cursor: pointer; font-weight: bold;}\"","module.exports = \"<div class=\\\"container-fluid lgn_container\\\">\\r\\n  <div class=\\\"row lgnInt\\\">\\r\\n    <div class=\\\"col-12 col-sm-6 col-md-6 col-lg-6 bgcenter\\\" [style.background-image]=\\\"'url(\\\\'assets/images/book1.jpg\\\\')'\\\">\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-12 col-sm-6 col-md-6 col-lg-6\\\">\\r\\n      <div class=\\\"login_frm\\\">\\r\\n\\r\\n        <div class=\\\"real_logo\\\"><h3>Welcome to library management system</h3></div>\\r\\n        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onLoginSubmit()\\\">\\r\\n          <div class=\\\"form-group\\\" *ngIf=\\\"logedfail\\\">\\r\\n            <div class=\\\"alert alert-danger\\\">Login Failed! (Incorrect Email / Password)</div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"email\\\"><b>email</b></label>\\r\\n            <input type=\\\"email\\\" pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" class=\\\"form-control myinp\\\" [ngClass]=\\\"{'is-invalid': isSubmitted && FrmControls.email.errors }\\\" placeholder=\\\"Enter Email\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" formControlName=\\\"email\\\" required>\\r\\n            <div *ngIf=\\\"isSubmitted && FrmControls.email.errors\\\" class=\\\"error_mes\\\">\\r\\n              <div *ngIf=\\\"FrmControls.email.errors.required\\\">Email Is Requied</div>\\r\\n              \\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"password\\\"><b>Password</b></label>\\r\\n            <input type=\\\"password\\\" class=\\\"form-control myinp\\\" [ngClass]=\\\"{'is-invalid': isSubmitted && FrmControls.password.errors}\\\" placeholder=\\\"Enter Password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" formControlName=\\\"password\\\" required>\\r\\n            <div *ngIf=\\\"isSubmitted && FrmControls.password.errors\\\" class=\\\"error_mes\\\">\\r\\n              <div *ngIf=\\\"FrmControls.password.errors.required\\\">Password is required</div>\\r\\n              <div *ngIf=\\\"FrmControls.password.errors.minlength\\\">Password must be at least 6 characters</div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\" *ngIf=\\\"logedSuc\\\">\\r\\n            <div class=\\\"alert alert-success\\\">Login Successfull</div>\\r\\n          </div>\\r\\n          <!-- <div class=\\\"col-12\\\" *ngIf=\\\"logedfail\\\">\\r\\n            <div class=\\\"alert alert-danger\\\">Invalid Email Id and Password</div>\\r\\n          </div> -->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary realBtn\\\">Login</button>\\r\\n            <span class=\\\"sgn_btn\\\">Don't you have an account? <span class=\\\"sgup\\\"  data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">Sign Up</span></span>\\r\\n          </div>\\r\\n\\r\\n\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"myModal\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg modal-dialog-centered\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n      \\r\\n        <!-- Modal Header -->\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\">Create a User</h4>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n        </div>\\r\\n        \\r\\n        <!-- Modal body -->\\r\\n        <div class=\\\"modal-body\\\">\\r\\n  \\r\\n          <form [formGroup]=\\\"crtUserForm\\\" (submit)=\\\"onSubmitUser()\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-12 col-sm-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"firstName\\\">First Name</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" [ngClass]=\\\"{'is-invalid': isSubmitted22 && FrmControls2.firstName.errors}\\\" [(ngModel)]=\\\"firstName\\\" [formControl]=\\\"crtUserForm.controls['firstName']\\\"\\r\\n                  placeholder=\\\"First Name\\\" id=\\\"firstName\\\" required>\\r\\n                  <div *ngIf=\\\"isSubmitted2 && FrmControls2.firstName.errors\\\" class=\\\"error_mes\\\">\\r\\n                    <div *ngIf=\\\"FrmControls2.firstName.errors.required\\\">firstName Is Requied</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n          \\r\\n              <div class=\\\"col-12 col-sm-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"lastName\\\">Last Name</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastName\\\" [ngClass]=\\\"{'is-invalid': isSubmitted2 && FrmControls2.lastName.errors}\\\" [(ngModel)]=\\\"lastName\\\" [formControl]=\\\"crtUserForm.controls['lastName']\\\" \\r\\n                  placeholder=\\\"Last Name\\\" id=\\\"lastName\\\" required>\\r\\n                  <div *ngIf=\\\"isSubmitted2 && FrmControls2.lastName.errors\\\" class=\\\"error_mes\\\">\\r\\n                    <div *ngIf=\\\"FrmControls2.lastName.errors.required\\\">lastName Is Requied</div>\\r\\n           \\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n          \\r\\n              <div class=\\\"col-12 col-sm-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"email\\\">Email</label>\\r\\n                  <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" [ngClass]=\\\"{'is-invalid': isSubmitted2 && FrmControls2.email.errors}\\\" [formControl]=\\\"crtUserForm.controls['email']\\\" \\r\\n                  placeholder=\\\"Email\\\" id=\\\"email\\\" required>\\r\\n                  <div *ngIf=\\\"isSubmitted2 && FrmControls2.email.errors\\\" class=\\\"error_mes\\\">\\r\\n                    <div *ngIf=\\\"FrmControls2.email.errors.required\\\">email Is Requied</div>\\r\\n     \\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"col-12 col-sm-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label>Password</label>\\r\\n                  <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" [ngClass]=\\\"{'is-invalid': isSubmitted2 && FrmControls2.password.errors}\\\" [formControl]=\\\"crtUserForm.controls['password']\\\" \\r\\n                  placeholder=\\\"Password\\\" id=\\\"password\\\">\\r\\n                  <div *ngIf=\\\"isSubmitted2 && FrmControls2.password.errors\\\" class=\\\"error_mes\\\">\\r\\n                    <div *ngIf=\\\"FrmControls2.password.errors.required\\\">Password Is Requied</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <!-- <div class=\\\"col-12 col-sm-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"mobileCountryCode\\\">Mobile Country Code</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"mobileCountryCode\\\" [(ngModel)]=\\\"mobileCountryCode\\\" [formControl]=\\\"crtUserForm.controls['mobileCountryCode']\\\" \\r\\n                  placeholder=\\\"Mobile Country Code\\\" id=\\\"mobileCountryCode\\\">\\r\\n                </div>\\r\\n              </div> -->\\r\\n\\r\\n              <div class=\\\"col-12 col-sm-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"phoneNumber\\\">Phone Number</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"phoneNumber\\\" [(ngModel)]=\\\"phoneNumber\\\" [ngClass]=\\\"{'is-invalid': isSubmitted2 && FrmControls2.phoneNumber.errors}\\\" [formControl]=\\\"crtUserForm.controls['phoneNumber']\\\" \\r\\n                  placeholder=\\\"Phone Number\\\" id=\\\"phoneNumber\\\">\\r\\n                  <div *ngIf=\\\"isSubmitted2 && FrmControls2.phoneNumber.errors\\\" class=\\\"error_mes\\\">\\r\\n                    <div *ngIf=\\\"FrmControls2.phoneNumber.errors.required\\\">phoneNumber Is Requied</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            \\r\\n          \\r\\n              <div class=\\\"col-12 col-sm-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"role\\\">Role</label>\\r\\n                  <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"role\\\" [(ngModel)]=\\\"role\\\" [formControl]=\\\"crtUserForm.controls['role']\\\" \\r\\n                  placeholder=\\\"role\\\" id=\\\"role\\\"> -->\\r\\n                  <select class=\\\"form-control\\\" [(ngModel)]=\\\"role\\\" name=\\\"role\\\" id=\\\"role\\\" [ngClass]=\\\"{'is-invalid': isSubmitted2 && FrmControls2.role.errors}\\\" [formControl]=\\\"crtUserForm.controls['role']\\\">\\r\\n                    <option [ngValue]=\\\"undefined\\\" selected>Select Role</option>\\r\\n                    <option value=\\\"user\\\">User</option>\\r\\n                    <option value=\\\"admin\\\">Admin</option>\\r\\n\\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"isSubmitted2 && FrmControls2.role.errors\\\" class=\\\"error_mes\\\">\\r\\n                    <div *ngIf=\\\"FrmControls2.role.errors.required\\\">role Is Requied</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n             \\r\\n\\r\\n              <div class=\\\"col-12\\\" *ngIf=\\\"userCrtMes\\\">\\r\\n                <div class=\\\"alert alert-success\\\">Successfully created new user.</div>\\r\\n              </div>\\r\\n                <div class=\\\"col-12\\\">\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-default realt_glbtn crtUser\\\">Create User</button>\\r\\n                </div>\\r\\n\\r\\n\\r\\n            </div>\\r\\n          </form>\\r\\n  \\r\\n        </div>\\r\\n        \\r\\n       \\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DashservicesService } from '../../Services/dashservices.service';\r\n\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm : FormGroup;\r\n  crtUserForm : FormGroup;\r\n  isSubmitted : boolean = false;\r\n  isSubmitted2 : boolean = false;\r\n  userObject : any = {};\r\n  logedSuc : boolean = false;\r\n  logedfail : boolean = false;\r\n  userCrtMes : boolean = false;\r\n  resultObj : any = {\r\n  //   user : any;\r\n  // token : any;\r\n  };\r\n  \r\n  constructor(\r\n    private frmBuilder : FormBuilder,\r\n    private routeSvc : Router,\r\n    private DSvc : DashservicesService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.createrLoginForm();\r\n    this.createUserForm();\r\n  }\r\n\r\n  createrLoginForm(){\r\n    this.loginForm = this.frmBuilder.group({\r\n      email: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n  get FrmControls(){\r\n    return this.loginForm.controls;\r\n  }\r\n  onLoginSubmit(){\r\n    const em = {\r\n      email : this.loginForm.get('email').value,\r\n      password : this.loginForm.get('password').value\r\n    }\r\n    this.isSubmitted = true;\r\n      this.DSvc.onSubmitLogin(em).subscribe( data => {\r\n        \r\n        if(data.success === true) {\r\n          this.resultObj = data.userData;\r\n        console.log(\"user DATAAA\");\r\n        console.log(this.resultObj);\r\n        this.isSubmitted = false;\r\n        this.logedSuc = true;\r\n        localStorage.setItem('memberID', this.resultObj._id);\r\n        localStorage.setItem('role', this.resultObj.role);\r\n        \r\n        //this.DSvc.storeUserData(this.resultObj.token, this.resultObj.user);\r\n\r\n        setTimeout(() =>{\r\n          this.logedSuc = false;\r\n          this.routeSvc.navigateByUrl('usermanagement');\r\n        });\r\n        } else {\r\n          this.logedfail = true\r\n          setTimeout(() => {\r\n            this.logedfail = false;\r\n          }, 1500);\r\n        }\r\n        \r\n      });\r\n     \r\n\r\n\r\n  }\r\n\r\n  createUserForm(){\r\n    this.crtUserForm = this.frmBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      email: ['', Validators.required],\r\n      phoneNumber: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n\r\n      role: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  \r\n  \r\nonSubmitUser(){\r\nconst userCreate = {\r\n  firstName : this.crtUserForm.get('firstName').value,\r\n  lastName : this.crtUserForm.get('lastName').value,\r\n  email : this.crtUserForm.get('email').value,\r\n  password : this.crtUserForm.get('password').value,\r\n  phoneNumber : this.crtUserForm.get('phoneNumber').value,\r\n  role : this.crtUserForm.get('role').value\r\n}\r\nthis.isSubmitted2 = true;\r\nthis.DSvc.createUser(userCreate).subscribe(result => {\r\n  console.log(\"cretttttttttttttttUSER\");\r\n  //this.allUsers();\r\n  console.log(result);\r\n  if(result.success){\r\n    this.isSubmitted2 = false;\r\n    this.userCrtMes = true;\r\n    setTimeout(() => {\r\n      this.userCrtMes = false;\r\n    }, 1000);\r\n  }\r\n});\r\n}\r\nget FrmControls2(){\r\n  return this.crtUserForm.controls;\r\n}\r\n\r\n\r\n}\r\n","module.exports = \".headSearch {\\r\\n    border: none; background-color: #fff; height: 40px; border-radius: 20px; padding: 0px 15px;\\r\\n}\\r\\n.headSearch:focus {\\r\\n    border: none; box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.1); outline: none;\\r\\n}\\r\\n.notific_header{ padding: 0px; margin: 0px; float: right;}\\r\\n.notific_header > li{ padding:18px 20px; margin: 0px; float: left; color: #fff;}\\r\\n.user_profile{ float: right;}\\r\\n.user_img{ width: 40px; height: 40px; background-color: #fff; display: inline-block;\\r\\n    margin: 10px; position: relative; overflow: hidden; border: 1px solid #fff;  border-radius: 100%;\\r\\n}\\r\\n.pagName{ color: #fff; padding: 18px 0px; font-size: 16px;}\\r\\n.ceobg{ width: 100%; height: 100%; -o-object-fit: cover; object-fit: cover;}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n\\r\\n  <div class=\\\"lftheder\\\">\\r\\n    <p class=\\\"pagName\\\">Page Name</p>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"rftheder\\\">\\r\\n      \\r\\n    <ul class=\\\"notific_header\\\">\\r\\n          <!-- <li><i class=\\\"far fa-envelope fa-2x\\\"></i></li>\\r\\n          <li><i class=\\\"far fa-bell fa-2x\\\"></i></li> -->\\r\\n          <li><a routerLink=\\\"/login\\\"> <i class=\\\"fa fa-sign-out\\\" aria-hidden=\\\"true\\\"></i> <strong>Logout</strong></a></li>\\r\\n          <div class=\\\"clearfix\\\"></div>\\r\\n    </ul>\\r\\n \\r\\n   <div class=\\\"clearfix\\\"></div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'topheader',\r\n  templateUrl: './topheader.component.html',\r\n  styleUrls: ['./topheader.component.css']\r\n})\r\nexport class TopheaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".crtUser{ width: 100%; display: block; margin: 20px auto; float: none; height: 45px;}\\r\\n.user_custom{ width: 220px; right: 20px; position: absolute; background-color: #fff; padding: 15px; box-shadow: 0px 0px 100px #000; z-index: 50;\\r\\n}\\r\\n.user_custom > li{ padding: 10px 10px; border-bottom: 1px solid #ddd; cursor: pointer;}\\r\\n.icn{ position: relative; right: 10px;}\\r\\n.spacemsg{ margin: 10px;}\\r\\n.delete_mask{ width: 100%; height: 100%; position: fixed; top: 0px; bottom: 0px; left: 0px; right: 0px;\\r\\n    z-index: 1200; background-color: rgba(0,0,0,.8);\\r\\n}\\r\\n.delete_user{ max-width: 660px; position: absolute; top: 40%; left: 0; right: 0; margin: 0px auto;\\r\\n    display: block; background-color: #fff; z-index: 3000; padding: 30px;\\r\\n}\\r\\n.delete_user > p{ text-align: center; font-size: 16px; font-weight: bold;}\\r\\n.clbtn{ width: 100px; margin: 0px auto; display: block; text-align: center;}\\r\\n\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"container-fluid zeropad top_hd\\\">\\r\\n  <topheader></topheader>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container-fluid zeropadleft\\\">\\r\\n  <div class=\\\"lftnavWrapper\\\">\\r\\n    <leftnav></leftnav>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"right_contwrapper right_cont\\\">\\r\\n    <div class=\\\"container-fluid main_cont\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-12 btspace\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-12 col-sm-3\\\">\\r\\n                  <!-- <input type=\\\"text\\\" class=\\\"form-control user_search\\\" id=\\\"search\\\" name=\\\"search\\\" placeholder=\\\"search\\\"> -->\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-light\\\">Total Users : <strong>{{allUsersData.length}}</strong></button>\\r\\n                </div>\\r\\n                <div class=\\\"col-12 col-sm-9\\\">\\r\\n                    <button type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\" class=\\\"btn btn-default realt_glbtn\\\"><i class=\\\"fas fa-user-plus\\\"></i> Create user</button>\\r\\n                    <div class=\\\"clearfix\\\"></div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-12\\\">\\r\\n\\r\\n                <table class=\\\"table table-striped\\\" [mfData]=\\\"allUsersData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"5\\\">\\r\\n                  <thead>\\r\\n                  <tr>\\r\\n                      <th style=\\\"width: 20%\\\">\\r\\n                          <mfDefaultSorter by=\\\"firstName\\\">firstName</mfDefaultSorter>\\r\\n                      </th>\\r\\n                      <th style=\\\"width: 20%\\\">\\r\\n                          <mfDefaultSorter by=\\\"lastName\\\">lastName</mfDefaultSorter>\\r\\n                      </th>\\r\\n                      <th style=\\\"width: 20%\\\">\\r\\n                          <mfDefaultSorter by=\\\"email\\\">email</mfDefaultSorter>\\r\\n                      </th>\\r\\n                      <th style=\\\"width: 20%\\\">\\r\\n                          <mfDefaultSorter by=\\\"phoneNumber\\\">phoneNumber</mfDefaultSorter>\\r\\n                      </th>\\r\\n                      <th style=\\\"width: 20%\\\">\\r\\n                        <mfDefaultSorter by=\\\"role\\\">Role</mfDefaultSorter>\\r\\n                    </th>\\r\\n                  <th style=\\\"width: 100%\\\">\\r\\n                    <mfDefaultSorter by=\\\"createdAt\\\">Created At</mfDefaultSorter>\\r\\n                </th>\\r\\n                <th style=\\\"width: 100%\\\">\\r\\n                  <mfDefaultSorter by=\\\"createdAt\\\">Last Login Date</mfDefaultSorter>\\r\\n              </th>\\r\\n                <th style=\\\"width: 20%\\\">\\r\\n                  <mfDefaultSorter>Actions</mfDefaultSorter>\\r\\n                </th>\\r\\n                \\r\\n                  </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                  <tr *ngFor=\\\"let user of mf.data\\\">\\r\\n                      <td>{{user.firstName}}</td>\\r\\n                      <td>{{user.lastName}}</td>\\r\\n                      <td>{{user.email}}</td>\\r\\n                      <td>{{user.phoneNumber}}</td>\\r\\n                      <td>{{user.role}}</td>\\r\\n                      <td>{{user.createdAt | date : 'medium'}}</td>\\r\\n                      <td>{{user.lastLoggedInDate | date : 'medium'}}</td>\\r\\n                      <td><a (click)=\\\"openUpdFOrm(user._id)\\\"><i data-toggle=\\\"modal\\\" data-target=\\\"#myModalUpd\\\" class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                      </a> &nbsp; <a (click)=\\\"deleteUser(user._id)\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i></a></td>\\r\\n                  </tr>\\r\\n                  </tbody>\\r\\n                  <tfoot>\\r\\n                  <tr>\\r\\n                      <td colspan=\\\"4\\\">\\r\\n                          <mfBootstrapPaginator [rowsOnPageSet]=\\\"[5,10,25]\\\"></mfBootstrapPaginator>\\r\\n                      </td>\\r\\n                  </tr>\\r\\n                  </tfoot>\\r\\n              </table>\\r\\n                   \\r\\n    \\r\\n                  </div>  \\r\\n\\r\\n            </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <!--Right Content End-->\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n \\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"myModal\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg modal-dialog-centered\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n    \\r\\n      <!-- Modal Header -->\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Create a User</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n      </div>\\r\\n      \\r\\n      <!-- Modal body -->\\r\\n      <div class=\\\"modal-body\\\">\\r\\n\\r\\n          <form [formGroup]=\\\"crtUserForm\\\" (submit)=\\\"onSubmitUser()\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-12 col-sm-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"firstName\\\">First Name</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" [ngClass]=\\\"{'is-invalid': isSubmitted && FrmControls.firstName.errors}\\\" [(ngModel)]=\\\"firstName\\\" [formControl]=\\\"crtUserForm.controls['firstName']\\\"\\r\\n                  placeholder=\\\"First Name\\\" id=\\\"firstName\\\" required>\\r\\n                  <div *ngIf=\\\"isSubmitted && FrmControls.firstName.errors\\\" class=\\\"error_mes\\\">\\r\\n                    <div *ngIf=\\\"FrmControls.firstName.errors.required\\\">firstName Is Requied</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n          \\r\\n              <div class=\\\"col-12 col-sm-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"lastName\\\">Last Name</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastName\\\" [ngClass]=\\\"{'is-invalid': isSubmitted && FrmControls.lastName.errors}\\\" [(ngModel)]=\\\"lastName\\\" [formControl]=\\\"crtUserForm.controls['lastName']\\\" \\r\\n                  placeholder=\\\"Last Name\\\" id=\\\"lastName\\\" required>\\r\\n                  <div *ngIf=\\\"isSubmitted && FrmControls.lastName.errors\\\" class=\\\"error_mes\\\">\\r\\n                    <div *ngIf=\\\"FrmControls.lastName.errors.required\\\">lastName Is Requied</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n          \\r\\n              <div class=\\\"col-12 col-sm-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"email\\\">Email</label>\\r\\n                  <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" [ngClass]=\\\"{'is-invalid': isSubmitted && FrmControls.email.errors}\\\" [formControl]=\\\"crtUserForm.controls['email']\\\" \\r\\n                  placeholder=\\\"Email\\\" id=\\\"email\\\" required>\\r\\n                  <div *ngIf=\\\"isSubmitted && FrmControls.email.errors\\\" class=\\\"error_mes\\\">\\r\\n                    <div *ngIf=\\\"FrmControls.email.errors.required\\\">email Is Requied</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"col-12 col-sm-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label>Password</label>\\r\\n                  <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" [ngClass]=\\\"{'is-invalid': isSubmitted && FrmControls.password.errors}\\\" [formControl]=\\\"crtUserForm.controls['password']\\\" \\r\\n                  placeholder=\\\"Password\\\" id=\\\"password\\\">\\r\\n                  <div *ngIf=\\\"isSubmitted && FrmControls.password.errors\\\" class=\\\"error_mes\\\">\\r\\n                    <div *ngIf=\\\"FrmControls.password.errors.required\\\">Password Is Requied</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <!-- <div class=\\\"col-12 col-sm-4\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"mobileCountryCode\\\">Mobile Country Code</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"mobileCountryCode\\\" [(ngModel)]=\\\"mobileCountryCode\\\" [formControl]=\\\"crtUserForm.controls['mobileCountryCode']\\\" \\r\\n                  placeholder=\\\"Mobile Country Code\\\" id=\\\"mobileCountryCode\\\">\\r\\n                </div>\\r\\n              </div> -->\\r\\n\\r\\n              <div class=\\\"col-12 col-sm-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"phoneNumber\\\">Phone Number</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"phoneNumber\\\" [(ngModel)]=\\\"phoneNumber\\\" [ngClass]=\\\"{'is-invalid': isSubmitted && FrmControls.phoneNumber.errors}\\\" [formControl]=\\\"crtUserForm.controls['phoneNumber']\\\" \\r\\n                  placeholder=\\\"Phone Number\\\" id=\\\"phoneNumber\\\">\\r\\n                  <div *ngIf=\\\"isSubmitted && FrmControls.phoneNumber.errors\\\" class=\\\"error_mes\\\">\\r\\n                    <div *ngIf=\\\"FrmControls.phoneNumber.errors.required\\\">phoneNumber Is Requied</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            \\r\\n          \\r\\n              <div class=\\\"col-12 col-sm-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"role\\\">Role</label>\\r\\n                  <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"role\\\" [(ngModel)]=\\\"role\\\" [formControl]=\\\"crtUserForm.controls['role']\\\" \\r\\n                  placeholder=\\\"role\\\" id=\\\"role\\\"> -->\\r\\n                  <select class=\\\"form-control\\\" [(ngModel)]=\\\"role\\\" name=\\\"role\\\" id=\\\"role\\\" [ngClass]=\\\"{'is-invalid': isSubmitted && FrmControls.role.errors}\\\" [formControl]=\\\"crtUserForm.controls['role']\\\">\\r\\n                    <option [ngValue]=\\\"undefined\\\" selected>Select Role</option>\\r\\n                    <option value=\\\"user\\\">User</option>\\r\\n                    <option value=\\\"admin\\\">Admin</option>\\r\\n\\r\\n                  </select>\\r\\n                  <div *ngIf=\\\"isSubmitted && FrmControls.role.errors\\\" class=\\\"error_mes\\\">\\r\\n                    <div *ngIf=\\\"FrmControls.role.errors.required\\\">role Is Requied</div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n             \\r\\n\\r\\n              <div class=\\\"col-12\\\" *ngIf=\\\"userCrtMes\\\">\\r\\n                <div class=\\\"alert alert-success\\\">Successfully created new user.</div>\\r\\n              </div>\\r\\n                <div class=\\\"col-12\\\">\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-default realt_glbtn crtUser\\\">Create User</button>\\r\\n                </div>\\r\\n\\r\\n\\r\\n            </div>\\r\\n          </form>\\r\\n\\r\\n      </div>\\r\\n      \\r\\n     \\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"myModalUpd\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg modal-dialog-centered\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n    \\r\\n      <!-- Modal Header -->\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Update User</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n      </div>\\r\\n      \\r\\n      <!-- Modal body -->\\r\\n      <div class=\\\"modal-body\\\">\\r\\n <div class=\\\"updUserForm\\\" *ngIf=\\\"updUserFRM\\\">\\r\\n  <form>\\r\\n      <div class=\\\"col-12\\\" *ngIf=\\\"userUpdMes\\\">\\r\\n          <div class=\\\"alert alert-success\\\">Successfully updated user.</div>\\r\\n        </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n          <label>First Name</label>\\r\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"userViewData.firstName\\\" name=\\\"userViewData.firstName\\\" class=\\\"form-control\\\" placeholder=\\\"Enter First Name\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>Last Name</label>\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"userViewData.lastName\\\" name=\\\"userViewData.lastName\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Last Name\\\">\\r\\n          </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"exampleInputEmail1\\\">Email address</label>\\r\\n      <input type=\\\"email\\\" [(ngModel)]=\\\"userViewData.email\\\" name=\\\"userViewData.email\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>Phone Number</label>\\r\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"userViewData.phoneNumber\\\" name=\\\"userViewData.phoneNumber\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Phone Number\\\">\\r\\n      </div>\\r\\n      \\r\\n      <div class=\\\"form-group\\\">\\r\\n          <label>Role</label>\\r\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"userViewData.role\\\" name=\\\"userViewData.role\\\" id=\\\"sel1\\\">\\r\\n              <option [attr.selected]=\\\"userViewData.role == 'user' ? true : null\\\" name=\\\"userViewData.role\\\">user</option>\\r\\n              <option [attr.selected]=\\\"userViewData.role == 'admin' ? true : null\\\" name=\\\"userViewData.role\\\">admin</option>\\r\\n            </select>\\r\\n          <!-- <select class=\\\"form-control\\\" [(ngModel)]=\\\"userViewData.role\\\" name=\\\"userViewData.role\\\" id=\\\"sel1\\\">\\r\\n              <option [attr.selected]=\\\"userViewData.role == 'user' ? true : null\\\"\\r\\n              >User</option>\\r\\n              <option [attr.selected]=\\\"userViewData.role == 'admin' ? true : null\\\">Admin</option>\\r\\n            </select> -->\\r\\n        </div>\\r\\n    <!-- <div class=\\\"form-group form-check\\\">\\r\\n      <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"exampleCheck1\\\" [(ngModel)]=\\\"liveStatus\\\" name=\\\"liveStatus\\\">\\r\\n      <label class=\\\"form-check-label\\\" for=\\\"exampleCheck1\\\">Online</label>\\r\\n    </div> -->\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onUpdateUser(userViewData._id)\\\">Submit</button>\\r\\n  </form>\\r\\n </div>\\r\\n\\r\\n </div>\\r\\n </div>\\r\\n </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"delete_mask\\\" *ngIf=\\\"msk\\\"></div>\\r\\n\\r\\n<div class=\\\"delete_user\\\" *ngIf=\\\"dsu\\\">\\r\\n  <p>Are you sure you want to delete this user ?</p>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary clbtn\\\" (click)=\\\"dltuser()\\\">Ok</button>\\r\\n</div>\\r\\n\\r\\n  \"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { FormBuilder, FormGroup, Validators, FormControl, FormArray, NG_VALIDATORS, Validator, AbstractControl, ValidatorFn } from '@angular/forms';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { DashservicesService } from '../../Services/dashservices.service';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'usermanagement',\r\n  templateUrl: './usermanagement.component.html',\r\n  styleUrls: ['./usermanagement.component.css']\r\n})\r\nexport class UsermanagementComponent implements OnInit {\r\n\r\n  usermEdit: boolean = false;\r\n  myData: {};\r\n  myToken: any;\r\n  userUpdMes: boolean = false;\r\n  allUsersData: any = [];\r\n  crtUserForm: FormGroup;\r\n  updUserForm: FormGroup;\r\n  userViewData: any = {};\r\n  userCrtMes: boolean = false;\r\n  updUserFRM: boolean = false;\r\n  memId: any;\r\n  userupdate: boolean = false;\r\n  mfData: any[];\r\n  msk: boolean = false;\r\n  dsu: boolean = false;\r\n  isSubmitted: boolean = false;\r\n  email: string;\r\n\r\n  constructor(\r\n    private frmBuilder: FormBuilder,\r\n    private routeSvc: Router,\r\n    private DSvc: DashservicesService\r\n  ) {\r\n    this.userViewData = {};\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.allUsers();\r\n    this.createUserForm();\r\n    this.updateUserForm();\r\n\r\n    this.routeSvc.routeReuseStrategy.shouldReuseRoute = function () { return false; }; this.routeSvc.events.subscribe((evt) => { if (evt instanceof NavigationEnd) { this.routeSvc.navigated = false; window.scrollTo(0, 0); } });\r\n\r\n  }\r\n\r\n  openUserEditBox(id) {\r\n    // this.usermEdit = !this.usermEdit;\r\n    this.usermEdit = id;\r\n    return id;\r\n  }\r\n  closeUserEdit() {\r\n    this.usermEdit = false;\r\n  }\r\n\r\n  openUpdFOrm(id) {\r\n    this.updUserFRM = id;\r\n    this.DSvc.openUser(id).subscribe(result => {\r\n      this.userViewData = result.userData;\r\n    });\r\n    //return this.userViewData;\r\n\r\n  }\r\n\r\n  allUsers() {\r\n    this.DSvc.getAllUsers().subscribe(result => {\r\n      this.allUsersData = result.userData;\r\n      console.log('users')\r\n      console.log(this.allUsersData)\r\n    });\r\n  }\r\n\r\n  createUserForm() {\r\n    this.crtUserForm = this.frmBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      phoneNumber: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n\r\n      role: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n\r\n\r\n  onSubmitUser() {\r\n    const userCreate = {\r\n      firstName: this.crtUserForm.get('firstName').value,\r\n      lastName: this.crtUserForm.get('lastName').value,\r\n      email: this.crtUserForm.get('email').value,\r\n      password: this.crtUserForm.get('password').value,\r\n      phoneNumber: this.crtUserForm.get('phoneNumber').value,\r\n      role: this.crtUserForm.get('role').value\r\n    }\r\n    this.isSubmitted = true;\r\n\r\n    this.DSvc.createUser(userCreate).subscribe(result => {\r\n      this.allUsers();\r\n      if (result.success == true) {\r\n        this.userCrtMes = true;\r\n        window.location.reload();\r\n        setTimeout(() => {\r\n          this.userCrtMes = false;\r\n        }, 1000);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateUserForm() {\r\n    this.updUserForm = this.frmBuilder.group({\r\n      'userViewData.firstName': ['', Validators.required],\r\n      'userViewData.lastName': ['', Validators.required],\r\n      'userViewData.email': ['', Validators.required],\r\n      'userViewData.phoneNumber': ['', Validators.required],\r\n      'userViewData.password': ['', Validators.required],\r\n      'userViewData.role': ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  onUpdateUser() {\r\n    this.DSvc.updteUser(this.userViewData).subscribe(result => {\r\n      this.allUsers();\r\n      if (result.success == true) {\r\n        this.userUpdMes = true;\r\n        window.location.reload()\r\n       // this.routeSvc.navigateByUrl('usermanagement')\r\n        /* setTimeout( () => {\r\n          window.location.reload()\r\n          this.routeSvc.navigate(['/usermanagement/'])\r\n          this.userupdate = false;\r\n        },1000); */\r\n      }\r\n    });\r\n  }\r\n\r\n  getUserbyUserId(id) {\r\n    this.DSvc.openUser(id).subscribe(result => {\r\n      this.userViewData = result.userData;\r\n      console.log('userrrrrrr')\r\n      console.log(this.userViewData);\r\n      localStorage.setItem('uid', this.userViewData._id);\r\n      this.routeSvc.navigate(['/viewuser/', { id: id }])\r\n    });\r\n  }\r\n\r\n  deleteUser(id) {\r\n    this.DSvc.deleteUserById(id).subscribe(result => {\r\n      console.log(result);\r\n      this.msk = true;\r\n      this.dsu = true;\r\n      //this.routeSvc.navigate(['/usermanagement/', {id : id}])\r\n    });\r\n  }\r\n\r\n  dltuser() {\r\n    this.msk = false;\r\n    this.dsu = false;\r\n    this.allUsers();\r\n\r\n  }\r\n\r\n  get FrmControls() {\r\n    return this.crtUserForm.controls;\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpHeaders, HttpEvent, HttpInterceptor, HttpClient ,HttpParams  } from '@angular/common/http';\r\n\r\nimport { Http, Headers, Response, RequestOptions  } from '@angular/http';\r\nimport { Observable, Subject  } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { map } from 'rxjs/operators';\r\nimport 'rxjs/add/operator/map';\r\n\r\n\r\n@Injectable()\r\nexport class DashservicesService {\r\n\r\n  private isUserLoggedIn:Subject<any>\r\n    result : any;\r\n    id: number;\r\n    _id: any;\r\n    authToken;\r\n    user;\r\n    options;\r\n    memberId;\r\n    Authorization: any;\r\n    firstName: any;\r\n    lastName: any;\r\n    email: any;\r\n    phoneNumber: any;\r\n    title: any;\r\n    isbn: any;\r\n    author: any;\r\n    description: any;\r\n    publisher: any;\r\n    publishedYear: any;\r\n    quantity: any;\r\n\r\n    private HttpHeaders;\r\n    myData : {};\r\n\r\n  baseUrl = \"http://159.69.21.13:3000/\";\r\n  // baseUrl = \"http://localhost:3000/\";\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.authToken = localStorage.getItem('Authorization');\r\n    console.log(this.authToken)\r\n  }\r\n\r\n  createUser(userCreate){\r\n    let body : any = {};\r\n    body.firstName = userCreate.firstName;\r\n    body.lastName = userCreate.lastName;\r\n    body.email = userCreate.email;\r\n    body.phoneNumber = userCreate.phoneNumber;\r\n    body.password = userCreate.password;\r\n    body.role = userCreate.role;\r\n    return this.http.post(this.baseUrl + \"v1/users/create\", body).pipe(map((response: any) => response));\r\n  }\r\n  \r\n\r\n  onSubmitLogin(member){\r\n    let em : any = {}\r\n    em.email = member.email;\r\n    em.password = member.password;\r\n    \r\n    return this.http.post(this.baseUrl + 'v1/users/loginUser', em).pipe(map((response: any) => response));\r\n  }\r\n\r\n  getAllUsers(){\r\n    return this.http.get(this.baseUrl + 'v1/users/getAllUsers' ).pipe(map((response: any) => response));\r\n  }\r\n\r\n  getAllListings(){\r\n    return this.http.get(this.baseUrl + \"listings/getAll\").pipe(map((Response : any) => Response));\r\n  }\r\n\r\n  //Create Listing\r\n\r\n  createListing(crtList,images){\r\n    let formData = new FormData();\r\n    formData.append('amenities',crtList.amenities);\r\n    formData.append('area',crtList.area);\r\n    formData.append('typeOfSale',crtList.typeOfSale);\r\n    formData.append('areainSqFt',crtList.areainSqFt);\r\n    formData.append('city',crtList.city);\r\n    formData.append('listingTitle',crtList.listingTitle);\r\n    formData.append('noOfBQ',crtList.noOfBQ);\r\n    formData.append('noOfBathRooms',crtList.noOfBathRooms);\r\n    formData.append('noOfBedRooms',crtList.noOfBedRooms);\r\n    formData.append('noOfSittingRooms',crtList.noOfSittingRooms);\r\n    formData.append('postalCode',crtList.postalCode);\r\n    formData.append('price',crtList.price);\r\n    formData.append('propertyType',crtList.propertyType);\r\n    formData.append('state',crtList.state);\r\n    formData.append('createdBy',crtList.createdBy);\r\n    for(let item of images){\r\n    formData.append('media',item,item.name);\r\n    }\r\n    \r\n    // let body : any = {};\r\n    // body.amenities = crtList.amenities;\r\n    // body.area = crtList.area;\r\n    // body.typeOfSale = crtList.typeOfSale;\r\n    // body.listingDescription = crtList.typeOfSale;\r\n    // body.areainSqFt = crtList.areainSqFt;\r\n    // body.city = crtList.city;\r\n    // body.listingTitle = crtList.listingTitle;\r\n    // body.noOfBQ = crtList.noOfBQ;\r\n    // body.media = crtList.media;\r\n    // body.noOfBathRooms = crtList.noOfBathRooms;\r\n    // body.noOfBedRooms = crtList.noOfBedRooms;\r\n    // body.noOfSittingRooms = crtList.noOfSittingRooms;\r\n    // body.postalCode = crtList.postalCode;\r\n    // body.price = crtList.price;\r\n    // body.propertyType = crtList.propertyType;\r\n    // body.state = crtList.state;\r\n    // body.createdBy = crtList.createdBy;\r\n    return this.http.post(this.baseUrl + 'listings', formData).pipe(map((response: any) => response));\r\n    \r\n\r\n   \r\n    //return this.http.post(this.baseUrl + \"listings\", JSON.stringify({ body : body, formData : new FormData() }), { headers: {'Authorization' : localStorage.getItem('Authorization')}}).pipe(map((response: any) => response));\r\n  //  return this.http.post(this.baseUrl + \"listings\", formData, { headers}).pipe(map((response: any) => response));\r\n  }\r\n\r\n//View User\r\n\r\nopenUser(id){\r\n  return this.http.get(this.baseUrl + \"v1/users/getByUserId/\" + id + \"\").pipe(map((response: any) => response));\r\n}\r\n\r\nopenListData(id){\r\n  return this.http.get(this.baseUrl + \"listings/getByListingId/\" + id + \"\").pipe(map((response: any) => response));\r\n}\r\n\r\n//Requests Get All\r\ngetAllRequests(){\r\n  return this.http.get(this.baseUrl + \"submitRequest/getAll\" ).pipe(map((response: any) => response));\r\n}\r\n\r\nupdteUser(userViewData){\r\n  let userBody = {\r\n    firstName : userViewData.firstName,\r\n    lastName  : userViewData.lastName,\r\n    email     : userViewData.email,\r\n    phoneNumber : userViewData.phoneNumber,\r\n    role      : userViewData.role\r\n  }\r\n  return this.http.put(this.baseUrl + \"v1/users/updateByUserId/\"+userViewData._id , userBody).pipe(map((response: any) => response));\r\n}\r\n\r\nopenBook(id){\r\n  return this.http.get(this.baseUrl + \"v1/books/getByBookId/\" + id + \"\").pipe(map((response: any) => response));\r\n}\r\n\r\n\r\nupdteBook(bookViewData){\r\n  let bookBody = {\r\n    title : bookViewData.title,\r\n    description : bookViewData.description,\r\n    author: bookViewData.author,\r\n    isbn: bookViewData.isbn,\r\n    publisher: bookViewData.publisher,\r\n    publishedYear: bookViewData.publishedYear,\r\n    quantity: bookViewData.quantity\r\n  }\r\n  return this.http.put(this.baseUrl + \"v1/books/updateByBookId/\"+bookViewData._id, bookBody).pipe(map((response: any) => response));\r\n}\r\n\r\ngetAllBooks(){\r\n  return this.http.get(this.baseUrl + \"v1/books/getAllBooks\").pipe(map((response: any) => response));\r\n}\r\n\r\ndeleteUserById(id){\r\n  return this.http.delete(this.baseUrl + \"v1/users/deleteByUserId/\" + id).pipe(map((response: any) => response));\r\n}\r\ncreateBook(bookCreate){\r\n  let body : any = {};\r\n  body.title = bookCreate.title;\r\n  body.description = bookCreate.description;\r\n  body.author = bookCreate.author;\r\n  body.isbn = bookCreate.isbn;\r\n  body.publisher = bookCreate.publisher;\r\n  body.publishedYear = bookCreate.publishedYear;\r\n  body.quantity = bookCreate.quantity;\r\n  return this.http.post(this.baseUrl + \"v1/books/create\", body).pipe(map((response: any) => response));\r\n}\r\n\r\ndeleteBookById(id){\r\n  return this.http.delete(this.baseUrl + \"v1/books/deleteByBookId/\" + id).pipe(map((response: any) => response));\r\n}\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ChartsModule, Color } from 'ng2-charts/ng2-charts';\r\nimport { HttpModule } from '@angular/http';\r\nimport { HttpClientModule, HttpClient, HttpClientJsonpModule, HttpHeaders  } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './Components/login/login.component';\r\nimport {DataTableModule} from \"angular-6-datatable\";\r\n\r\nimport { DashservicesService } from './Services/dashservices.service';\r\nimport { LeftnavComponent } from './Components/leftnav/leftnav.component';\r\nimport { TopheaderComponent } from './Components/topheader/topheader.component';\r\nimport { UsermanagementComponent } from './Components/usermanagement/usermanagement.component';\r\nimport { BooksmanagementComponent } from './components/booksmanagement/booksmanagement.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n\r\n    LeftnavComponent,\r\n    TopheaderComponent,\r\n    UsermanagementComponent,\r\n\r\n    BooksmanagementComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ChartsModule,\r\n    HttpModule,\r\n    DataTableModule,\r\n    HttpClientModule,\r\n    HttpClientJsonpModule,\r\n    ReactiveFormsModule,\r\n    \r\n    RouterModule.forRoot([\r\n      { path : '', redirectTo : 'login', pathMatch : 'full'},\r\n      { path : 'login', component : LoginComponent},\r\n\r\n      { path : 'usermanagement', component : UsermanagementComponent},\r\n      { path : 'booksmanagement', component : BooksmanagementComponent}\r\n\r\n    ])\r\n  ],\r\n  providers: [\r\n    DashservicesService,\r\n    \r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid zeropad top_hd\\\">\\r\\n  <topheader></topheader>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container-fluid zeropadleft\\\">\\r\\n  <div class=\\\"lftnavWrapper\\\">\\r\\n    <leftnav></leftnav>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"right_contwrapper right_cont\\\">\\r\\n    <div class=\\\"container-fluid main_cont\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12 btspace\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-12 col-sm-3\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-light\\\">Total books : <strong>{{booksData.length}}</strong></button>\\r\\n              <!-- <input type=\\\"text\\\" class=\\\"form-control user_search\\\" id=\\\"search\\\" name=\\\"search\\\" placeholder=\\\"search\\\"> -->\\r\\n            </div>\\r\\n            <div class=\\\"col-12 col-sm-9\\\">\\r\\n\\r\\n              <button type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#crtBook\\\" class=\\\"btn btn-default realt_glbtn\\\"><i\\r\\n                  class=\\\"fas fa-user-plus\\\"></i> Create Book</button>\\r\\n              <div class=\\\"clearfix\\\"></div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n\\r\\n          <table class=\\\"table table-striped\\\" [mfData]=\\\"booksData\\\" #mf=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"5\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th style=\\\"width: 20%\\\">\\r\\n                  <mfDefaultSorter by=\\\"title\\\">Title</mfDefaultSorter>\\r\\n                </th>\\r\\n                <th style=\\\"width: 50%\\\">\\r\\n                  <mfDefaultSorter by=\\\"description\\\">Description</mfDefaultSorter>\\r\\n                </th>\\r\\n                <th style=\\\"width: 10%\\\">\\r\\n                  <mfDefaultSorter by=\\\"author\\\">Author</mfDefaultSorter>\\r\\n                </th>\\r\\n                <th style=\\\"width: 20%\\\">\\r\\n                  <mfDefaultSorter by=\\\"isbn\\\">Isbn</mfDefaultSorter>\\r\\n                </th>\\r\\n                <th style=\\\"width: 20%\\\">\\r\\n                  <mfDefaultSorter by=\\\"publisher\\\">Publisher</mfDefaultSorter>\\r\\n                </th>\\r\\n                <th style=\\\"width: 20%\\\">\\r\\n                    <mfDefaultSorter by=\\\"publishedYear\\\">Published Year</mfDefaultSorter>\\r\\n                  </th>\\r\\n                <th style=\\\"width: 20%\\\">\\r\\n                  <mfDefaultSorter by=\\\"quantity\\\">Quantity</mfDefaultSorter>\\r\\n                </th>\\r\\n                <th style=\\\"width: 20%\\\">\\r\\n                  <mfDefaultSorter by=\\\"createdAt\\\">Created At</mfDefaultSorter>\\r\\n                </th>\\r\\n                <th style=\\\"width: 20%\\\">\\r\\n                  <mfDefaultSorter>Actions</mfDefaultSorter>\\r\\n                </th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let book of mf.data\\\">\\r\\n                <td>{{book.title}}</td>\\r\\n                <td>{{book.description}}</td>\\r\\n                <td>{{book.author}}</td>\\r\\n                <td>{{book.isbn}}</td>\\r\\n                <td>{{book.publisher}}</td>\\r\\n                <td>{{book.publishedYear}}</td>\\r\\n                <td>{{book.quantity}}</td>\\r\\n                <td>{{book.createdAt | date : 'medium'}}</td>\\r\\n                <td><a (click)=\\\"openUpdFOrm(book._id)\\\"><i data-toggle=\\\"modal\\\" data-target=\\\"#myModalUpd\\\" class=\\\"fa fa-pencil-square-o\\\"\\r\\n                      aria-hidden=\\\"true\\\"></i>\\r\\n                  </a> &nbsp; <a (click)=\\\"deleteBook(book._id)\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i></a></td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n            <tfoot>\\r\\n              <tr>\\r\\n                <td colspan=\\\"4\\\">\\r\\n                  <mfBootstrapPaginator [rowsOnPageSet]=\\\"[5,10,25]\\\"></mfBootstrapPaginator>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tfoot>\\r\\n          </table>\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <!--Right Content End-->\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n<!-- The Modal -->\\r\\n\\r\\n\\r\\n<!-- The Modal -->\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"crtBook\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg modal-dialog-centered\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n\\r\\n      <!-- Modal Header -->\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Create Book</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n      </div>\\r\\n\\r\\n      <!-- Modal body -->\\r\\n      <div class=\\\"modal-body\\\">\\r\\n\\r\\n        <form [formGroup]=\\\"crtBookForm\\\" (submit)=\\\"onSubmitBook()\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-12 col-sm-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"title\\\">Title</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"title\\\" [(ngModel)]=\\\"title\\\" [ngClass]=\\\"{'is-invalid': isSubmitted && FrmControls.title.errors}\\\"\\r\\n                  [formControl]=\\\"crtBookForm.controls['title']\\\" placeholder=\\\"Title\\\" id=\\\"title\\\">\\r\\n                <div *ngIf=\\\"isSubmitted && FrmControls.title.errors\\\" class=\\\"error_mes\\\">\\r\\n                  <div *ngIf=\\\"FrmControls.title.errors.required\\\">Title Is Requied</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-12 col-sm-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"description\\\">Description</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\" [(ngModel)]=\\\"description\\\" [ngClass]=\\\"{'is-invalid': isSubmitted && FrmControls.description.errors}\\\"\\r\\n                  [formControl]=\\\"crtBookForm.controls['description']\\\" placeholder=\\\"Description\\\" id=\\\"description\\\">\\r\\n                <div *ngIf=\\\"isSubmitted && FrmControls.description.errors\\\" class=\\\"error_mes\\\">\\r\\n                  <div *ngIf=\\\"FrmControls.description.errors.required\\\">Description Is Requied</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-12 col-sm-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"author\\\">Author</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"author\\\" [(ngModel)]=\\\"author\\\" [ngClass]=\\\"{'is-invalid': isSubmitted && FrmControls.author.errors}\\\"\\r\\n                  [formControl]=\\\"crtBookForm.controls['author']\\\" placeholder=\\\"Author\\\" id=\\\"author\\\">\\r\\n                <div *ngIf=\\\"isSubmitted && FrmControls.author.errors\\\" class=\\\"error_mes\\\">\\r\\n                  <div *ngIf=\\\"FrmControls.author.errors.required\\\">Author Is Requied</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-12 col-sm-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"isbn\\\">Isbn</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"isbn\\\" [(ngModel)]=\\\"isbn\\\" [ngClass]=\\\"{'is-invalid': isSubmitted && FrmControls.isbn.errors}\\\"\\r\\n                  [formControl]=\\\"crtBookForm.controls['isbn']\\\" placeholder=\\\"Isbn\\\" id=\\\"isbn\\\">\\r\\n                <div *ngIf=\\\"isSubmitted && FrmControls.isbn.errors\\\" class=\\\"error_mes\\\">\\r\\n                  <div *ngIf=\\\"FrmControls.isbn.errors.required\\\">Isbn Is Requied</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-12 col-sm-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"quantity\\\">Quantity</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"quantity\\\" [(ngModel)]=\\\"quantity\\\" [ngClass]=\\\"{'is-invalid': isSubmitted && FrmControls.quantity.errors}\\\"\\r\\n                  [formControl]=\\\"crtBookForm.controls['quantity']\\\" placeholder=\\\"Quantity\\\" id=\\\"quantity\\\">\\r\\n                <div *ngIf=\\\"isSubmitted && FrmControls.quantity.errors\\\" class=\\\"error_mes\\\">\\r\\n                  <div *ngIf=\\\"FrmControls.quantity.errors.required\\\">Quantity Is Requied</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <!-- <div class=\\\"col-12 col-sm-4\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"mobileCountryCode\\\">Mobile Country Code</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"mobileCountryCode\\\" [(ngModel)]=\\\"mobileCountryCode\\\" [formControl]=\\\"crtBookForm.controls['mobileCountryCode']\\\" \\r\\n                    placeholder=\\\"Mobile Country Code\\\" id=\\\"mobileCountryCode\\\">\\r\\n                  </div>\\r\\n                </div> -->\\r\\n\\r\\n            <div class=\\\"col-12 col-sm-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"publisher\\\">Publisher</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"publisher\\\" [(ngModel)]=\\\"publisher\\\" [ngClass]=\\\"{'is-invalid': isSubmitted && FrmControls.publisher.errors}\\\"\\r\\n                  [formControl]=\\\"crtBookForm.controls['publisher']\\\" placeholder=\\\"Publisher\\\" id=\\\"publisher\\\">\\r\\n                <div *ngIf=\\\"isSubmitted && FrmControls.publisher.errors\\\" class=\\\"error_mes\\\">\\r\\n                  <div *ngIf=\\\"FrmControls.publisher.errors.required\\\">Publisher Is Requied</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n            <div class=\\\"col-12 col-sm-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"publishedYear\\\">Published Year</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"publishedYear\\\" [(ngModel)]=\\\"publishedYear\\\" [ngClass]=\\\"{'is-invalid': isSubmitted && FrmControls.publishedYear.errors}\\\"\\r\\n                  [formControl]=\\\"crtBookForm.controls['publishedYear']\\\" placeholder=\\\"publishedYear\\\" id=\\\"publishedYear\\\">\\r\\n                <div *ngIf=\\\"isSubmitted && FrmControls.publishedYear.errors\\\" class=\\\"error_mes\\\">\\r\\n                  <div *ngIf=\\\"FrmControls.publishedYear.errors.required\\\">Published Year Is Requied</div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n            <div class=\\\"col-12\\\" *ngIf=\\\"userCrtMes\\\">\\r\\n              <div class=\\\"alert alert-success\\\">Successfully created new book.</div>\\r\\n            </div>\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <button type=\\\"submit\\\" class=\\\"btn btn-default realt_glbtn crtUser\\\">Create Book</button>\\r\\n            </div>\\r\\n\\r\\n\\r\\n          </div>\\r\\n        </form>\\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"myModalUpd\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg modal-dialog-centered\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n\\r\\n      <!-- Modal Header -->\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\">Update Book</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\r\\n      </div>\\r\\n\\r\\n      <!-- Modal body -->\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"updUserForm\\\" *ngIf=\\\"updUserFRM\\\">\\r\\n          <form>\\r\\n            <div class=\\\"col-12\\\" *ngIf=\\\"userUpdMes\\\">\\r\\n              <div class=\\\"alert alert-success\\\">Successfully updated book.</div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Title</label>\\r\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"bookViewData.title\\\" name=\\\"bookViewData.title\\\" class=\\\"form-control\\\"\\r\\n                placeholder=\\\"Enter Title\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Description</label>\\r\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"bookViewData.description\\\" name=\\\"bookViewData.description\\\" class=\\\"form-control\\\"\\r\\n                placeholder=\\\"Enter Description\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Author</label>\\r\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"bookViewData.author\\\" name=\\\"bookViewData.author\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\r\\n                aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter Author\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>ISBN No</label>\\r\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"bookViewData.isbn\\\" name=\\\"bookViewData.isbn\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\r\\n                aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter ISBN No\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Publisher</label>\\r\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"bookViewData.publisher\\\" name=\\\"bookViewData.publisher\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\r\\n                aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter Publisher\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Published Year</label>\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"bookViewData.publishedYear\\\" name=\\\"bookViewData.publishedYear\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\r\\n                  aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter Published year\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                  <label>Quantity</label>\\r\\n                  <input type=\\\"text\\\" [(ngModel)]=\\\"bookViewData.quantity\\\" name=\\\"bookViewData.quantity\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\"\\r\\n                    aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter Quantity\\\">\\r\\n                </div>\\r\\n\\r\\n            <!-- <div class=\\\"form-group form-check\\\">\\r\\n          <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"exampleCheck1\\\" [(ngModel)]=\\\"liveStatus\\\" name=\\\"liveStatus\\\">\\r\\n          <label class=\\\"form-check-label\\\" for=\\\"exampleCheck1\\\">Online</label>\\r\\n        </div> -->\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onUpdateBook()\\\">Submit</button>\\r\\n          </form>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"delete_mask\\\" *ngIf=\\\"msk\\\"></div>\\r\\n\\r\\n<div class=\\\"delete_user\\\" *ngIf=\\\"dsu\\\">\\r\\n  <p>Are you sure you want to delete this Book ?</p>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary clbtn\\\" (click)=\\\"dltBook()\\\">Ok</button>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { FormBuilder, FormGroup, Validators, FormControl, FormArray, NG_VALIDATORS, Validator, AbstractControl, ValidatorFn } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DashservicesService } from '../../Services/dashservices.service';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'booksmanagement',\r\n  templateUrl: './booksmanagement.component.html',\r\n  styleUrls: ['./booksmanagement.component.css']\r\n})\r\nexport class BooksmanagementComponent implements OnInit {\r\n  booksData: any = [];\r\n  mfData: any[];\r\n  crtBookForm: FormGroup;\r\n  userCrtMes : boolean;\r\n  isSubmitted : boolean = false;\r\n  msk : boolean = false;\r\n  dsu : boolean = false;\r\n  updUserFRM: boolean = false;\r\n  userUpdMes: boolean = false;\r\n  bookViewData: any = {};\r\n\r\n  constructor(\r\n    private frmBuilder : FormBuilder,\r\n    private routeSvc : Router,\r\n    private DSvc : DashservicesService\r\n  ) {\r\n    this.bookViewData = {};\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getTotalBooks();\r\n    this.createBookForm();\r\n  }\r\n\r\n  getTotalBooks(){\r\n    this.DSvc.getAllBooks().subscribe(result => {\r\n      \r\n      this.booksData = result.userData;\r\n      console.log(\"bookssssssssssss\");\r\n      console.log(this.booksData)\r\n    });\r\n  }\r\n\r\n  createBookForm(){\r\n    this.crtBookForm = this.frmBuilder.group({\r\n      title: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      author: ['', Validators.required],\r\n      isbn: ['', Validators.required],\r\n      publisher: ['', Validators.required],\r\n      publishedYear: ['', Validators.required],\r\n      quantity: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  onSubmitBook(){\r\n    const bookCreate = {\r\n      title : this.crtBookForm.get('title').value,\r\n      description : this.crtBookForm.get('description').value,\r\n      author : this.crtBookForm.get('author').value,\r\n      isbn : this.crtBookForm.get('isbn').value,\r\n      publisher : this.crtBookForm.get('publisher').value,\r\n      publishedYear : this.crtBookForm.get('publishedYear').value,\r\n      quantity : this.crtBookForm.get('quantity').value\r\n    }\r\n    this.isSubmitted = true;\r\n    this.DSvc.createBook(bookCreate).subscribe(result => {\r\n      this.getTotalBooks();\r\n      if(result.success){\r\n        this.isSubmitted = false;\r\n        this.userCrtMes = true;\r\n        setTimeout(() => {\r\n          this.userCrtMes = false;\r\n        }, 1000);\r\n      }\r\n    });\r\n    }\r\n\r\n    openUpdFOrm(id) {\r\n      this.updUserFRM = id;\r\n      console.log(id)\r\n      this.DSvc.openBook(id).subscribe(result => {\r\n        this.bookViewData = result.bookData\r\n      });\r\n      //return this.bookViewData;\r\n  \r\n    }\r\n\r\n    onUpdateBook() {\r\n      console.log(this.bookViewData)\r\n      this.DSvc.updteBook(this.bookViewData).subscribe(result => {\r\n        this.getTotalBooks();\r\n        if (result.success == true) {\r\n          this.userUpdMes = true;\r\n          window.location.reload()\r\n        }\r\n      });\r\n    }\r\n\r\n    get FrmControls(){\r\n      return this.crtBookForm.controls;\r\n    }\r\n\r\n    deleteBook(id){\r\n      this.DSvc.deleteBookById(id).subscribe(result => {\r\n        console.log(result);\r\n        this.msk = true;\r\n        this.dsu =true;\r\n      });\r\n    }\r\n    \r\n    dltBook(){\r\n      this.msk = false;\r\n      this.dsu =false;\r\n      this.getTotalBooks();\r\n      \r\n    }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}